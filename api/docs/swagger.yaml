basePath: /v1
definitions:
  models.GetUser:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      username:
        type: string
    type: object
  models.RegisterResponse:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      username:
        type: string
    type: object
  models.RegisterUser:
    properties:
      email:
        type: string
      name:
        maxLength: 30
        minLength: 2
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
      username:
        maxLength: 30
        minLength: 2
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  models.ResponseError:
    properties:
      error:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      name:
        maxLength: 50
        minLength: 2
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a user service api.
  title: Swagger for User api
  version: "2.0"
paths:
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Register a user
      tags:
      - register
  /users:
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUser'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create a user
      tags:
      - user
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by it's id
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUser'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get a user by it's id
      tags:
      - user
swagger: "2.0"
